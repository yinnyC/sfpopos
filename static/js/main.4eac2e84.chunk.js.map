{"version":3,"sources":["components/Title/Title.js","components/About/About.js","components/POPOSSpace/POPOSSpace.js","components/POPOSList/POPOSList.js","components/POPOSDetails/POPOSDetails.js","components/Footer/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["Title","className","activeClassName","exact","to","About","Counter","state","count","increase_like","newCount","setState","onClick","this","Component","POPOSSpace","props","name","image","address","hours","id","src","process","width","height","alt","POPOSList","useState","query","setQuery","spaces","data","filter","obj","inTitle","title","toLowerCase","includes","inAddress","map","i","images","key","value","placeholder","onChange","e","target","type","POPOSDetails","match","params","desc","features","geo","lat","lon","Footer","year","Date","getFullYear","App","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4eac2e84.chunk.js","sourcesContent":["// src/Title.js\n\nimport React from 'react'\nimport './Title.css';\nimport { NavLink } from 'react-router-dom'\n\nfunction Title() {\n  return (\n    <div className=\"Title\">\n      <header>\n      <h1>SFPOPOS</h1>\n        <div className=\"Title-Subtitle\">\n          <p>San Francisco Privately Owned Public Open Spaces</p>\n          <div>\n            <NavLink\n              className=\"nav-link\"\n              activeClassName=\"nav-link-active\"\n              exact\n              to=\"/\">List</NavLink>\n\n            <NavLink\n              className=\"nav-link\"\n              activeClassName=\"nav-link-active\"\n              to=\"/about\">About</NavLink>\n          </div>\n        </div> \n      </header>\n    </div>\n    \n  )\n}\n\nexport default Title","import React from 'react'\n\nfunction About() {\n  return (\n    <div>\n      <h1>About SFPOPOS</h1>\n      <p>POPOS are publicly accessible spaces in\n        forms of plazas, terraces, atriums, small\n        parks, and even snippets which are provided\n        and maintained by private developers. In San\n        Francisco, POPOS mostly appear in the Downtown\n        office district area.</p>\n    </div>\n  )\n}\n\nexport default About","// src/Project.js\nimport React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport './POPOSSpace.css';\n\nfunction POPOSSpace(props) {\n  const { name, image, address, hours, id } = props\n  return (\n    <div className=\"POPOSSpace\">\n      <Link to={`/details/${id}`}>\n        <img src={`${process.env.PUBLIC_URL}images/${image}`} width=\"300\" height=\"300\" alt='{name}' />\n      </Link>\n      \n        <Link className=\"POPOSSpace-title\" to={`/details/${id}`}>\n        <h2>{name}</h2>\n        </Link>\n        <div className=\"POPOSSpace-info\">\n          <div>{address}</div>\n          <div>{hours}</div>\n          <Counter/>\n        </div>\n     \n    </div>\n  )\n}\n\nclass Counter extends Component {\n  state = {\n    count: 0\n  }\n  increase_like = () => {\n    let newCount = this.state.count + 1\n    this.setState({\n      count: newCount\n    })\n  }\n  render(){\n    return(\n      <button onClick={this.increase_like}>‚ù§ {this.state.count}</button>\n    )\n  }\n}\nexport default POPOSSpace","// src/POPOSList.js\n\nimport React, { useState } from 'react'\nimport POPOSSpace from '../POPOSSpace/POPOSSpace';\nimport data from '../../sfpopos-data.json'\nimport './POPOSList.css';\n\nfunction POPOSList() {\n  const [ query, setQuery ] = useState('') // query -> read, query->set, '' initialize a state\n  const spaces = data.filter((obj) => {\n    // true if query is in title\n    const inTitle = obj.title.toLowerCase().includes(query.toLowerCase())\n    // true if query is in address\n    const inAddress = obj.address.toLowerCase().includes(query.toLowerCase())\n    // return true if either is true\n    return inTitle || inAddress\n  }).map(({ title, address, images, hours }, i) => {\n    return (\n      <POPOSSpace\n        id={i}\n        key={title}\n        name={title}\n        address={address}\n        image={images[0]}\n        hours={hours}\n      />\n    )\n  })\n  return (\n    <div>\n       <form>\n            <input \n                value={query}\n                placeholder=\"search\"\n                onChange={(e) => setQuery(e.target.value)} // Full-Control Element\n            />\n            <button type=\"submit\">Submit</button>\n        </form>\n      <div className=\"POPOSList\">\n        { spaces }\n      </div>\n    </div>\n  )\n}\n\n\nexport default POPOSList","// src/POPOSDetails.js\n\nimport React from 'react'\nimport data from '../../sfpopos-data.json'\nimport './POPOSDetails.css'\n\nfunction POPOSDetails(props) {\n  const { id } = props.match.params // Location index\n  const { images, title, desc, hours, features, geo } = data[id]\n  return (\n    <div className=\"POPOSDetails\">\n      <div className=\"POPOSDetails-image\">\n        <img src={`${process.env.PUBLIC_URL}images/${images[0]}`} alt={title}/>\n      </div>\n      <div className=\"POPOSDetails-info\">\n        <h1 className=\"POPOSDetails-title\">{ title }</h1>\n        <p className=\"POPOSDetails-desc\">{ desc }</p>\n        <p className=\"POPOSDetails-hours\">{ hours }</p>\n        <p className=\"POPOSDetails-features\">{ features }</p>\n        <p className=\"POPOSDetails-geo\">{ geo.lat } { geo.lon }</p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default POPOSDetails","// src/Footer.js\n\nimport React from 'react';\nimport './Footer.css';\n\nfunction Footer(){\n  const year = new Date();\n  return(\n    <footer className=\"Footer\">\n      <p>Yin Chang copyright {year.getFullYear()}</p>\n    </footer>\n    \n  )\n}\n\nexport default Footer","import { HashRouter as Router, Route } from 'react-router-dom'\nimport React from 'react';\nimport './App.css';\nimport Title from './Title/Title';\nimport About from './About/About'\nimport POPOSList from './POPOSList/POPOSList';\nimport POPOSDetails from './POPOSDetails/POPOSDetails'\nimport Footer from './Footer/Footer';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Title />\n      <Route exact path=\"/\" component={POPOSList}/>\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/details/:id\" component={POPOSDetails} />\n      <Footer/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}